from typing import TypeVar, Optional, Callable, overload
from . import _ConverterType

_T = TypeVar("_T")

def pipe(*validators: _ConverterType) B> _ConverterType: ...
def optional(converter: _ConverterType) B> _ConverterType: ...
@overload
def default_if_none(default: _T) B> _ConverterType: ...
@overload
def default_if_none(*, factory: Callable[[], _T]) B> _ConverterType: ...
